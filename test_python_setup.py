"""
–¢–µ—Å—Ç –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Python –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ç–∞
–°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ —Ç–æ–∑–∏ —Ñ–∞–π–ª –∑–∞ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ –¥–∞–ª–∏ –≤—Å–∏—á–∫–æ —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ
"""

import sys
import subprocess
import importlib

def test_python_version():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º Python –≤–µ—Ä—Å–∏—è...")
    version = sys.version_info
    print(f"   Python –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}.{version.micro}")
    
    if version.major >= 3 and version.minor >= 8:
        print("   ‚úì Python –≤–µ—Ä—Å–∏—è—Ç–∞ –µ –ø–æ–¥—Ö–æ–¥—è—â–∞ (3.8+)")
        return True
    else:
        print("   ‚ùå Python –≤–µ—Ä—Å–∏—è—Ç–∞ –µ —Ç–≤—ä—Ä–¥–µ —Å—Ç–∞—Ä–∞ (–∏–∑–∏—Å–∫–≤–∞ —Å–µ 3.8+)")
        return False

def test_pip():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ pip —Ä–∞–±–æ—Ç–∏"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º pip...")
    try:
        result = subprocess.run([sys.executable, '-m', 'pip', '--version'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print(f"   ‚úì pip —Ä–∞–±–æ—Ç–∏: {result.stdout.strip()}")
            return True
        else:
            print(f"   ‚ùå pip –Ω–µ —Ä–∞–±–æ—Ç–∏: {result.stderr}")
            return False
    except Exception as e:
        print(f"   ‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ pip: {e}")
        return False

def test_required_packages():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –≤—Å–∏—á–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏ –ø–∞–∫–µ—Ç–∏ —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏"""
    print("\nüìö –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏—Ç–µ –ø–∞–∫–µ—Ç–∏...")
    
    required_packages = [
        'flask',
        'requests', 
        'beautifulsoup4',
        'selenium',
        'pandas',
        'numpy',
        'scikit-learn',
        'matplotlib',
        'seaborn',
        'plotly',
        'dash',
        'dash-bootstrap-components'
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            # –ù—è–∫–æ–∏ –ø–∞–∫–µ—Ç–∏ –∏–º–∞—Ç —Ä–∞–∑–ª–∏—á–Ω–∏ –∏–º–µ–Ω–∞ –∑–∞ –∏–º–ø–æ—Ä—Ç
            import_name = package
            if package == 'beautifulsoup4':
                import_name = 'bs4'
            elif package == 'dash-bootstrap-components':
                import_name = 'dash_bootstrap_components'
            
            importlib.import_module(import_name)
            print(f"   ‚úì {package}")
        except ImportError:
            print(f"   ‚ùå {package} - –ª–∏–ø—Å–≤–∞")
            missing_packages.append(package)
    
    if missing_packages:
        print(f"\n   –õ–∏–ø—Å–≤–∞—Ç –ø–∞–∫–µ—Ç–∏: {', '.join(missing_packages)}")
        print("   –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–π—Ç–µ –≥–∏ —Å: pip install -r requirements.txt")
        return False
    else:
        print("   ‚úì –í—Å–∏—á–∫–∏ –ø–∞–∫–µ—Ç–∏ —Å–∞ –Ω–∞–ª–∏—á–Ω–∏")
        return True

def test_selenium():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ Selenium –º–æ–∂–µ –¥–∞ —Ä–∞–±–æ—Ç–∏ —Å Chrome"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º Selenium...")
    try:
        from selenium import webdriver
        from selenium.webdriver.chrome.options import Options
        
        chrome_options = Options()
        chrome_options.add_argument('--headless')
        chrome_options.add_argument('--no-sandbox')
        chrome_options.add_argument('--disable-dev-shm-usage')
        
        driver = webdriver.Chrome(options=chrome_options)
        driver.quit()
        print("   ‚úì Selenium —Ä–∞–±–æ—Ç–∏ —Å Chrome")
        return True
        
    except Exception as e:
        print(f"   ‚ö†Ô∏è Selenium –ø—Ä–æ–±–ª–µ–º: {e}")
        print("   ChromeDriver –º–æ–∂–µ –¥–∞ –Ω–µ –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª–Ω–æ")
        print("   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ —â–µ —Ä–∞–±–æ—Ç–∏, –Ω–æ –Ω—è–∫–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ –¥–∞ –Ω–µ —Å–∞ –Ω–∞–ª–∏—á–Ω–∏")
        return False

def test_flask():
    """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ Flask –º–æ–∂–µ –¥–∞ —Å–µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞"""
    print("\nüöÄ –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º Flask...")
    try:
        from flask import Flask
        app = Flask(__name__)
        
        @app.route('/')
        def test():
            return "Test OK"
        
        print("   ‚úì Flask –º–æ–∂–µ –¥–∞ —Å–µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞")
        return True
        
    except Exception as e:
        print(f"   ‚ùå Flask –ø—Ä–æ–±–ª–µ–º: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ"""
    print("=" * 60)
    print("PYTHON SETUP TEST - SCOPUS JOURNAL ANALYZER")
    print("=" * 60)
    
    tests = [
        ("Python –≤–µ—Ä—Å–∏—è", test_python_version),
        ("pip", test_pip),
        ("–ù–µ–æ–±—Ö–æ–¥–∏–º–∏ –ø–∞–∫–µ—Ç–∏", test_required_packages),
        ("Selenium", test_selenium),
        ("Flask", test_flask)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"   ‚ùå –ì—Ä–µ—à–∫–∞ –≤ —Ç–µ—Å—Ç–∞ {test_name}: {e}")
            results.append((test_name, False))
    
    # –û–±–æ–±—â–µ–Ω–∏–µ
    print("\n" + "=" * 60)
    print("–û–ë–û–ë–©–ï–ù–ò–ï –ù–ê –†–ï–ó–£–õ–¢–ê–¢–ò–¢–ï")
    print("=" * 60)
    
    passed = 0
    total = len(results)
    
    for test_name, result in results:
        status = "‚úì –ü–†–û–ú–ò–ù–ê" if result else "‚ùå –ù–ï–£–°–ü–ï–®–ï–ù"
        print(f"{test_name:20} : {status}")
        if result:
            passed += 1
    
    print(f"\n–û–±—â–æ: {passed}/{total} —Ç–µ—Å—Ç–∞ –ø—Ä–µ–º–∏–Ω–∞—Ö–∞")
    
    if passed == total:
        print("\nüéâ –í–°–ò–ß–ö–û –†–ê–ë–û–¢–ò –ü–†–ê–í–ò–õ–ù–û!")
        print("–ú–æ–∂–µ—Ç–µ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ —Å: python run_app.py")
    elif passed >= total - 1:  # –ê–∫–æ —Å–∞–º–æ Selenium –Ω–µ —Ä–∞–±–æ—Ç–∏
        print("\n‚ö†Ô∏è –ü–û–ß–¢–ò –í–°–ò–ß–ö–û –†–ê–ë–û–¢–ò!")
        print("Selenium –∏–º–∞ –ø—Ä–æ–±–ª–µ–º, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ —â–µ —Ä–∞–±–æ—Ç–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç")
        print("–ú–æ–∂–µ—Ç–µ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ —Å: python run_app.py")
    else:
        print("\n‚ùå –ò–ú–ê –ü–†–û–ë–õ–ï–ú–ò –° –ù–ê–°–¢–†–û–ô–ö–ê–¢–ê!")
        print("–ú–æ–ª—è —Å–ª–µ–¥–≤–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏—Ç–µ –≤ PYTHON_SETUP_GUIDE.md")
    
    print("\n–ó–∞ –ø–æ–º–æ—â –≤–∏–∂—Ç–µ: PYTHON_SETUP_GUIDE.md")

if __name__ == '__main__':
    main()

