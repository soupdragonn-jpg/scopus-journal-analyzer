"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ–Ω –∏–Ω—Å—Ç–∞–ª–∞—Ç–æ—Ä –∑–∞ ChromeDriver
–ò–∑—Ç–µ–≥–ª—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–≤–∞ ChromeDriver –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
"""

import os
import sys
import requests
import zipfile
import json
import subprocess
from pathlib import Path

def get_chrome_version():
    """–ü–æ–ª—É—á–∞–≤–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏—è Chrome"""
    try:
        # Windows –∫–æ–º–∞–Ω–¥–∞ –∑–∞ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ Chrome
        result = subprocess.run([
            'reg', 'query', 
            'HKEY_CURRENT_USER\\Software\\Google\\Chrome\\BLBeacon', 
            '/v', 'version'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            version_line = result.stdout.strip().split('\n')[-1]
            version = version_line.split()[-1]
            return version
    except:
        pass
    
    # –ê–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–µ–Ω –Ω–∞—á–∏–Ω
    try:
        chrome_paths = [
            r"C:\Program Files\Google\Chrome\Application\chrome.exe",
            r"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
        ]
        
        for chrome_path in chrome_paths:
            if os.path.exists(chrome_path):
                result = subprocess.run([chrome_path, '--version'], 
                                      capture_output=True, text=True)
                if result.returncode == 0:
                    version = result.stdout.strip().split()[-1]
                    return version
    except:
        pass
    
    return None

def get_chromedriver_version(chrome_version):
    """–ü–æ–ª—É—á–∞–≤–∞ —Å—ä–æ—Ç–≤–µ—Ç–Ω–∞—Ç–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ ChromeDriver"""
    try:
        # API –∑–∞ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ ChromeDriver
        major_version = chrome_version.split('.')[0]
        
        # –û–ø–∏—Ç–≤–∞–º–µ –¥–∞ –ø–æ–ª—É—á–∏–º –ø–æ—Å–ª–µ–¥–Ω–∞—Ç–∞ —Å—Ç–∞–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è
        url = f"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_{major_version}"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            return response.text.strip()
    except:
        pass
    
    return None

def download_chromedriver(version):
    """–ò–∑—Ç–µ–≥–ª—è ChromeDriver"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–º–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞—Ç–∞
        if sys.maxsize > 2**32:
            platform = "win32"  # 64-bit
        else:
            platform = "win32"  # 32-bit
        
        # URL –∑–∞ –∏–∑—Ç–µ–≥–ª—è–Ω–µ
        url = f"https://chromedriver.storage.googleapis.com/{version}/chromedriver_{platform}.zip"
        
        print(f"üì• –ò–∑—Ç–µ–≥–ª—è–º ChromeDriver –≤–µ—Ä—Å–∏—è {version}...")
        print(f"üîó URL: {url}")
        
        response = requests.get(url, timeout=30)
        response.raise_for_status()
        
        # –ó–∞–ø–∞–∑–≤–∞–º–µ ZIP —Ñ–∞–π–ª–∞
        zip_path = "chromedriver.zip"
        with open(zip_path, 'wb') as f:
            f.write(response.content)
        
        print("‚úÖ ChromeDriver –∏–∑—Ç–µ–≥–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return zip_path
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç–µ–≥–ª—è–Ω–µ: {e}")
        return None

def extract_chromedriver(zip_path):
    """–ò–∑–≤–ª–∏—á–∞ ChromeDriver –æ—Ç ZIP —Ñ–∞–π–ª–∞"""
    try:
        print("üì¶ –ò–∑–≤–ª–∏—á–∞–º ChromeDriver...")
        
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall('.')
        
        # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Ñ–∞–π–ª—ä—Ç –µ –∏–∑–≤–ª–µ—á–µ–Ω
        if os.path.exists('chromedriver.exe'):
            print("‚úÖ ChromeDriver –∏–∑–≤–ª–µ—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå ChromeDriver –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –≤ –∞—Ä—Ö–∏–≤–∞!")
            return False
            
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ: {e}")
        return False
    finally:
        # –ò–∑—Ç—Ä–∏–≤–∞–º–µ ZIP —Ñ–∞–π–ª–∞
        try:
            os.remove(zip_path)
        except:
            pass

def test_chromedriver():
    """–¢–µ—Å—Ç–≤–∞ –¥–∞–ª–∏ ChromeDriver —Ä–∞–±–æ—Ç–∏"""
    try:
        print("üß™ –¢–µ—Å—Ç–≤–∞–º ChromeDriver...")
        
        from selenium import webdriver
        from selenium.webdriver.chrome.options import Options
        
        chrome_options = Options()
        chrome_options.add_argument('--headless')
        chrome_options.add_argument('--no-sandbox')
        chrome_options.add_argument('--disable-dev-shm-usage')
        
        driver = webdriver.Chrome(options=chrome_options)
        driver.get('https://www.google.com')
        driver.quit()
        
        print("‚úÖ ChromeDriver —Ä–∞–±–æ—Ç–∏ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå ChromeDriver —Ç–µ—Å—Ç –Ω–µ—É—Å–ø–µ—à–µ–Ω: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("CHROMEDRIVER –ê–í–¢–û–ú–ê–¢–ò–ß–ï–ù –ò–ù–°–¢–ê–õ–ê–¢–û–†")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ ChromeDriver –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
    if os.path.exists('chromedriver.exe'):
        print("‚úÖ ChromeDriver –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤ —Ç–µ–∫—É—â–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è!")
        
        # –¢–µ—Å—Ç–≤–∞–º–µ –¥–∞–ª–∏ —Ä–∞–±–æ—Ç–∏
        if test_chromedriver():
            print("üéâ ChromeDriver —Ä–∞–±–æ—Ç–∏ –æ—Ç–ª–∏—á–Ω–æ!")
            return
        else:
            print("‚ö†Ô∏è ChromeDriver –Ω–µ —Ä–∞–±–æ—Ç–∏, —â–µ –≥–æ –ø—Ä–µ–∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–º...")
    
    # –ü–æ–ª—É—á–∞–≤–∞–º–µ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ Chrome
    print("üîç –¢—ä—Ä—Å—è –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ Google Chrome...")
    chrome_version = get_chrome_version()
    
    if not chrome_version:
        print("‚ùå –ù–µ –º–æ–≥–∞ –¥–∞ –Ω–∞–º–µ—Ä—è Google Chrome!")
        print("–ú–æ–ª—è –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–π—Ç–µ Google Chrome –æ—Ç: https://www.google.com/chrome/")
        return
    
    print(f"‚úÖ –ù–∞–º–µ—Ä–µ–Ω Google Chrome –≤–µ—Ä—Å–∏—è: {chrome_version}")
    
    # –ü–æ–ª—É—á–∞–≤–∞–º–µ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ ChromeDriver
    print("üîç –¢—ä—Ä—Å—è —Å—ä–æ—Ç–≤–µ—Ç–Ω–∞—Ç–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ ChromeDriver...")
    chromedriver_version = get_chromedriver_version(chrome_version)
    
    if not chromedriver_version:
        print("‚ùå –ù–µ –º–æ–≥–∞ –¥–∞ –Ω–∞–º–µ—Ä—è —Å—ä–æ—Ç–≤–µ—Ç–Ω–∞—Ç–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ ChromeDriver!")
        print("–ú–æ–ª—è –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–π—Ç–µ ChromeDriver —Ä—ä—á–Ω–æ –æ—Ç: https://chromedriver.chromium.org/")
        return
    
    print(f"‚úÖ –ù–∞–º–µ—Ä–µ–Ω–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ ChromeDriver: {chromedriver_version}")
    
    # –ò–∑—Ç–µ–≥–ª—è–º–µ ChromeDriver
    zip_path = download_chromedriver(chromedriver_version)
    if not zip_path:
        return
    
    # –ò–∑–≤–ª–∏—á–∞–º–µ ChromeDriver
    if not extract_chromedriver(zip_path):
        return
    
    # –¢–µ—Å—Ç–≤–∞–º–µ ChromeDriver
    if test_chromedriver():
        print("\nüéâ CHROMEDRIVER –ò–ù–°–¢–ê–õ–ò–†–ê–ù –£–°–ü–ï–®–ù–û!")
        print("–°–µ–≥–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ Selenium!")
        
        print("\nüìã –°–ª–µ–¥–≤–∞—â–∏ —Å—Ç—ä–ø–∫–∏:")
        print("1. –°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ: python simple_selenium_test.py")
        print("2. –ò–ª–∏: python test_selenium.py")
        print("3. –ò–ª–∏: python run_app.py")
    else:
        print("\n‚ùå ChromeDriver –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ!")
        print("–ú–æ–ª—è –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –¥–∞–ª–∏ Google Chrome –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª–Ω–æ.")

if __name__ == "__main__":
    main()
